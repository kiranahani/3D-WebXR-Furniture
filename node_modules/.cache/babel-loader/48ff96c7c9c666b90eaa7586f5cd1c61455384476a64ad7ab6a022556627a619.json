{"ast":null,"code":"var _jsxFileName = \"D:\\\\3D-WebXR-Furniture\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [hitTestVisible, setHitTestVisible] = useState(false);\n  useEffect(() => {\n    let reticle;\n    let hitTestSource = null;\n    let hitTestSourceRequested = false;\n    let scene, camera, renderer;\n    let models = [\"./Rheina-Chair.glb\", \"./Round-Table.glb\", \"./Renata-Square-Dining-Table.glb\", \"./Lala-Chair.glb\", \"./Almira-Bar-Table.glb\", \"./Renata-Big-Recta-Dining-Table.glb\", \"./Rama-Big-Round-Table.glb\", \"./Alma-Chair.glb\", \"./Deva-Round-SIde-Table.glb\", \"./High-Baack-Stool.glb\", \"./Indian-Barstool.glb\", \"./Lily-Side-Chair.glb\", \"./Jungle-Side-Table.glb\", \"./Rama-Small-Round-Table.glb\", \"./Renata-Side-Table.glb\", \"./Altha-Chair.glb\", \"./Lulu-Chair.glb\"];\n    let modelScaleFactor = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n    let items = [];\n    let itemSelectedIndex = 0;\n    let controller;\n    init();\n    setupFurnitureSelection();\n    animate();\n    function init() {\n      let myCanvas = document.getElementById(\"canvas\");\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n      const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n      light.position.set(0.5, 1, 0.25);\n      scene.add(light);\n      renderer = new THREE.WebGLRenderer({\n        canvas: myCanvas,\n        antialias: true,\n        alpha: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n      renderer.xr.enabled = true;\n      const xrLight = new XREstimatedLight(renderer);\n      xrLight.addEventListener(\"estimationstart\", () => {\n        scene.add(xrLight);\n        scene.remove(light);\n        if (xrLight.environment) {\n          scene.environment = xrLight.environment;\n        }\n      });\n      xrLight.addEventListener(\"estimationend\", () => {\n        scene.add(light);\n        scene.remove(xrLight);\n      });\n      let arButton = ARButton.createButton(renderer, {\n        requiredFeatures: [\"hit-test\"],\n        optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n        domOverlay: {\n          root: document.body\n        }\n      });\n      arButton.style.bottom = \"22%\";\n      document.body.appendChild(arButton);\n\n      // Add event listener to AR button to show the message\n      arButton.addEventListener('click', () => {\n        setHitTestVisible(true);\n      });\n      for (let i = 0; i < models.length; i++) {\n        const loader = new GLTFLoader();\n        loader.load(models[i], function (glb) {\n          let model = glb.scene;\n          items[i] = model;\n        });\n      }\n      controller = renderer.xr.getController(0);\n      controller.addEventListener(\"select\", onSelect);\n      scene.add(controller);\n      reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n      reticle.matrixAutoUpdate = false;\n      reticle.visible = false;\n      scene.add(reticle);\n    }\n    function onSelect() {\n      if (reticle.visible) {\n        let newModel = items[itemSelectedIndex].clone();\n        newModel.visible = true;\n        reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n        scene.add(newModel);\n      }\n    }\n    function setupFurnitureSelection() {\n      for (let i = 0; i < models.length; i++) {\n        const el = document.querySelector(`#item` + i);\n        el.addEventListener(\"beforexrselect\", e => {\n          e.preventDefault();\n          e.stopPropagation();\n        });\n        el.addEventListener(\"click\", e => {\n          e.preventDefault();\n          e.stopPropagation();\n          onClicked(e, items[i], i);\n        });\n      }\n    }\n    function onClicked(e, selectItem, index) {\n      itemSelectedIndex = index;\n      for (let i = 0; i < models.length; i++) {\n        const el = document.querySelector(`#item` + i);\n        el.classList.remove(\"clicked\");\n      }\n      e.target.classList.add(\"clicked\");\n    }\n    function animate() {\n      renderer.setAnimationLoop(render);\n    }\n    function render(timestamp, frame) {\n      if (frame) {\n        const referenceSpace = renderer.xr.getReferenceSpace();\n        const session = renderer.xr.getSession();\n        if (hitTestSourceRequested === false) {\n          session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n            session.requestHitTestSource({\n              space: referenceSpace\n            }).then(function (source) {\n              hitTestSource = source;\n            });\n          });\n          session.addEventListener(\"end\", function () {\n            hitTestSourceRequested = false;\n            hitTestSource = null;\n            setHitTestVisible(false); // Hide the message when session ends\n          });\n\n          hitTestSourceRequested = true;\n        }\n        if (hitTestSource) {\n          const hitTestResults = frame.getHitTestResults(hitTestSource);\n          if (hitTestResults.length) {\n            const hit = hitTestResults[0];\n            reticle.visible = true;\n            reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\n          } else {\n            reticle.visible = false;\n          }\n        }\n      }\n      renderer.render(scene, camera);\n    }\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `scanning-message ${hitTestVisible ? 'visible' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"scanwhite.png\",\n        alt: \"Scanning\",\n        className: \"scanning-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-text\",\n        children: \"Our System Scanning your Surface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ltUOuBATZIrWUrhkIgmtjZ0dDJQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","THREE","ARButton","GLTFLoader","XREstimatedLight","jsxDEV","_jsxDEV","App","_s","hitTestVisible","setHitTestVisible","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","controller","init","setupFurnitureSelection","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","xrLight","addEventListener","remove","environment","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","load","glb","model","getController","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","newModel","clone","matrix","decompose","quaternion","scale","scaleFactor","el","querySelector","e","preventDefault","stopPropagation","onClicked","selectItem","index","classList","target","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","fromArray","getPose","transform","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/3D-WebXR-Furniture/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport * as THREE from \"three\";\r\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\r\n\r\nfunction App() {\r\n  const [hitTestVisible, setHitTestVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let reticle;\r\n    let hitTestSource = null;\r\n    let hitTestSourceRequested = false;\r\n\r\n    let scene, camera, renderer;\r\n    let models = [\r\n      \"./Rheina-Chair.glb\",\r\n      \"./Round-Table.glb\",\r\n      \"./Renata-Square-Dining-Table.glb\",\r\n      \"./Lala-Chair.glb\",\r\n      \"./Almira-Bar-Table.glb\",\r\n      \"./Renata-Big-Recta-Dining-Table.glb\",\r\n      \"./Rama-Big-Round-Table.glb\",\r\n      \"./Alma-Chair.glb\",\r\n      \"./Deva-Round-SIde-Table.glb\",\r\n      \"./High-Baack-Stool.glb\",\r\n      \"./Indian-Barstool.glb\",\r\n      \"./Lily-Side-Chair.glb\",\r\n      \"./Jungle-Side-Table.glb\",\r\n      \"./Rama-Small-Round-Table.glb\",\r\n      \"./Renata-Side-Table.glb\",\r\n      \"./Altha-Chair.glb\",\r\n      \"./Lulu-Chair.glb\",\r\n    ];\r\n    let modelScaleFactor = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n    let items = [];\r\n    let itemSelectedIndex = 0;\r\n\r\n    let controller;\r\n\r\n    init();\r\n    setupFurnitureSelection();\r\n    animate();\r\n\r\n    function init() {\r\n      let myCanvas = document.getElementById(\"canvas\");\r\n      scene = new THREE.Scene();\r\n      camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\r\n\r\n      const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\r\n      light.position.set(0.5, 1, 0.25);\r\n      scene.add(light);\r\n\r\n      renderer = new THREE.WebGLRenderer({\r\n        canvas: myCanvas,\r\n        antialias: true,\r\n        alpha: true,\r\n      });\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\r\n      renderer.xr.enabled = true;\r\n\r\n      const xrLight = new XREstimatedLight(renderer);\r\n      xrLight.addEventListener(\"estimationstart\", () => {\r\n        scene.add(xrLight);\r\n        scene.remove(light);\r\n        if (xrLight.environment) {\r\n          scene.environment = xrLight.environment;\r\n        }\r\n      });\r\n\r\n      xrLight.addEventListener(\"estimationend\", () => {\r\n        scene.add(light);\r\n        scene.remove(xrLight);\r\n      });\r\n\r\n      let arButton = ARButton.createButton(renderer, {\r\n        requiredFeatures: [\"hit-test\"],\r\n        optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\r\n        domOverlay: { root: document.body },\r\n      });\r\n      arButton.style.bottom = \"22%\";\r\n      document.body.appendChild(arButton);\r\n\r\n      // Add event listener to AR button to show the message\r\n      arButton.addEventListener('click', () => {\r\n        setHitTestVisible(true);\r\n      });\r\n\r\n      for (let i = 0; i < models.length; i++) {\r\n        const loader = new GLTFLoader();\r\n        loader.load(models[i], function (glb) {\r\n          let model = glb.scene;\r\n          items[i] = model;\r\n        });\r\n      }\r\n\r\n      controller = renderer.xr.getController(0);\r\n      controller.addEventListener(\"select\", onSelect);\r\n      scene.add(controller);\r\n\r\n      reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\r\n      reticle.matrixAutoUpdate = false;\r\n      reticle.visible = false;\r\n      scene.add(reticle);\r\n    }\r\n\r\n    function onSelect() {\r\n      if (reticle.visible) {\r\n        let newModel = items[itemSelectedIndex].clone();\r\n        newModel.visible = true;\r\n\r\n        reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\r\n\r\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\r\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\r\n\r\n        scene.add(newModel);\r\n      }\r\n    }\r\n\r\n    function setupFurnitureSelection() {\r\n      for (let i = 0; i < models.length; i++) {\r\n        const el = document.querySelector(`#item` + i);\r\n        el.addEventListener(\"beforexrselect\", (e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        });\r\n        el.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          onClicked(e, items[i], i);\r\n        });\r\n      }\r\n    }\r\n\r\n    function onClicked(e, selectItem, index) {\r\n      itemSelectedIndex = index;\r\n\r\n      for (let i = 0; i < models.length; i++) {\r\n        const el = document.querySelector(`#item` + i);\r\n        el.classList.remove(\"clicked\");\r\n      }\r\n      e.target.classList.add(\"clicked\");\r\n    }\r\n\r\n    function animate() {\r\n      renderer.setAnimationLoop(render);\r\n    }\r\n\r\n    function render(timestamp, frame) {\r\n      if (frame) {\r\n        const referenceSpace = renderer.xr.getReferenceSpace();\r\n        const session = renderer.xr.getSession();\r\n\r\n        if (hitTestSourceRequested === false) {\r\n          session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\r\n            session.requestHitTestSource({ space: referenceSpace }).then(function (source) {\r\n              hitTestSource = source;\r\n            });\r\n          });\r\n\r\n          session.addEventListener(\"end\", function () {\r\n            hitTestSourceRequested = false;\r\n            hitTestSource = null;\r\n            setHitTestVisible(false); // Hide the message when session ends\r\n          });\r\n\r\n          hitTestSourceRequested = true;\r\n        }\r\n\r\n        if (hitTestSource) {\r\n          const hitTestResults = frame.getHitTestResults(hitTestSource);\r\n\r\n          if (hitTestResults.length) {\r\n            const hit = hitTestResults[0];\r\n\r\n            reticle.visible = true;\r\n            reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\r\n          } else {\r\n            reticle.visible = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n    }\r\n\r\n  }, []); // Empty dependency array means this effect runs once after the initial render\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <canvas id=\"canvas\"></canvas>\r\n      <div className={`scanning-message ${hitTestVisible ? 'visible' : 'hidden'}`}>\r\n        <img src=\"scanwhite.png\" alt=\"Scanning\" className=\"scanning-image\" />\r\n        <div className=\"typing-text\">Our System Scanning your Surface</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}