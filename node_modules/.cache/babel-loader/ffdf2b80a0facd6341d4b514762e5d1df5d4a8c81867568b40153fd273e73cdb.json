{"ast":null,"code":"var _jsxFileName = \"D:\\\\3D-WebXR-Furniture\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  const models = [\"./Rheina-Chair.glb\", \"./Round-Table.glb\", \"./Renata-Square-Dining-Table.glb\", \"./Lala-Chair.glb\", \"./Almira-Bar-Table.glb\", \"./Renata-Big-Recta-Dining-Table.glb\", \"./Rama-Big-Round-Table.glb\", \"./Alma-Chair.glb\", \"./Deva-Round-SIde-Table.glb\", \"./High-Baack-Stool.glb\", \"./Indian-Barstool.glb\", \"./Lily-Side-Chair.glb\", \"./Jungle-Side-Table.glb\", \"./Rama-Small-Round-Table.glb\", \"./Renata-Side-Table.glb\", \"./Altha-Chair.glb\", \"./Lulu-Chair.glb\"];\n  const modelScaleFactor = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n  const items = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  const [hitTestVisible, setHitTestVisible] = useState(true);\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    animate();\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n    const xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      scene.add(xrLight);\n      scene.remove(light);\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n    xrLight.addEventListener(\"estimationend\", () => {\n      scene.add(light);\n      scene.remove(xrLight);\n    });\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"22%\";\n    document.body.appendChild(arButton);\n    renderer.xr.addEventListener('sessionstart', () => {\n      // Remove the AR button when the AR session starts\n      if (arButton.parentElement) {\n        arButton.parentElement.removeChild(arButton);\n      }\n    });\n    renderer.xr.addEventListener('sessionend', () => {\n      // Optional: You can re-add the AR button if needed when the session ends\n      // document.body.appendChild(arButton);\n    });\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n  }\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n      let scaleFactor = modelScaleFactor[itemSelectedIndex];\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n      scene.add(newModel);\n    }\n  }\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item${i}`);\n      el.classList.remove(\"clicked\");\n    }\n    e.target.classList.add(\"clicked\");\n  };\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item${i}`);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        let hitTestResult = null;\n        for (const hit of hitTestResults) {\n          const pose = hit.getPose(referenceSpace);\n          const normal = pose.transform.orientation;\n          if (Math.abs(normal[0]) < 0.1 && Math.abs(normal[1] - 1) < 0.1 && Math.abs(normal[2]) < 0.1) {\n            hitTestResult = hit;\n            break;\n          }\n        }\n        if (hitTestResult) {\n          const pose = hitTestResult.getPose(referenceSpace);\n          reticle.visible = true;\n          reticle.matrix.fromArray(pose.transform.matrix);\n          setHitTestVisible(false);\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), hitTestVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanning-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"scanwhite.png\",\n        alt: \"Scanning\",\n        className: \"scanning-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-text\",\n        children: \"Our System Scanning your Surface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"faNbiyfIh4Wc6S5063I0w4fuLrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","XREstimatedLight","useState","useEffect","jsxDEV","_jsxDEV","App","_s","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","controller","hitTestVisible","setHitTestVisible","init","setupFurnitureSelection","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","xrLight","addEventListener","remove","environment","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","parentElement","removeChild","i","length","loader","load","glb","model","getController","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","newModel","clone","matrix","decompose","quaternion","scale","scaleFactor","onClicked","e","selectItem","index","el","querySelector","classList","target","preventDefault","stopPropagation","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hitTestResult","hit","pose","getPose","normal","transform","orientation","abs","fromArray","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/3D-WebXR-Furniture/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport * as THREE from \"three\";\r\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  let reticle;\r\n  let hitTestSource = null;\r\n  let hitTestSourceRequested = false;\r\n\r\n  let scene, camera, renderer;\r\n\r\n  const models = [\r\n    \"./Rheina-Chair.glb\", \r\n    \"./Round-Table.glb\", \r\n    \"./Renata-Square-Dining-Table.glb\", \r\n    \"./Lala-Chair.glb\", \r\n    \"./Almira-Bar-Table.glb\", \r\n    \"./Renata-Big-Recta-Dining-Table.glb\", \r\n    \"./Rama-Big-Round-Table.glb\", \r\n    \"./Alma-Chair.glb\", \r\n    \"./Deva-Round-SIde-Table.glb\", \r\n    \"./High-Baack-Stool.glb\", \r\n    \"./Indian-Barstool.glb\", \r\n    \"./Lily-Side-Chair.glb\", \r\n    \"./Jungle-Side-Table.glb\", \r\n    \"./Rama-Small-Round-Table.glb\", \r\n    \"./Renata-Side-Table.glb\",\r\n    \"./Altha-Chair.glb\",\r\n    \"./Lulu-Chair.glb\"\r\n  ];\r\n  \r\n  const modelScaleFactor = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n  const items = [];\r\n  let itemSelectedIndex = 0;\r\n\r\n  let controller;\r\n  const [hitTestVisible, setHitTestVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    init();\r\n    setupFurnitureSelection();\r\n    animate();\r\n  }, []); // Empty dependency array ensures this runs once on mount\r\n\r\n  function init() {\r\n    let myCanvas = document.getElementById(\"canvas\");\r\n    scene = new THREE.Scene();\r\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\r\n  \r\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\r\n    light.position.set(0.5, 1, 0.25);\r\n    scene.add(light);\r\n  \r\n    renderer = new THREE.WebGLRenderer({\r\n      canvas: myCanvas,\r\n      antialias: true,\r\n      alpha: true,\r\n    });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\r\n    renderer.xr.enabled = true;\r\n  \r\n    const xrLight = new XREstimatedLight(renderer);\r\n    xrLight.addEventListener(\"estimationstart\", () => {\r\n      scene.add(xrLight);\r\n      scene.remove(light);\r\n      if (xrLight.environment) {\r\n        scene.environment = xrLight.environment;\r\n      }\r\n    });\r\n  \r\n    xrLight.addEventListener(\"estimationend\", () => {\r\n      scene.add(light);\r\n      scene.remove(xrLight);\r\n    });\r\n  \r\n    let arButton = ARButton.createButton(renderer, {\r\n      requiredFeatures: [\"hit-test\"],\r\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\r\n      domOverlay: { root: document.body },\r\n    });\r\n  \r\n    arButton.style.bottom = \"22%\";\r\n    document.body.appendChild(arButton);\r\n  \r\n    renderer.xr.addEventListener('sessionstart', () => {\r\n      // Remove the AR button when the AR session starts\r\n      if (arButton.parentElement) {\r\n        arButton.parentElement.removeChild(arButton);\r\n      }\r\n    });\r\n  \r\n    renderer.xr.addEventListener('sessionend', () => {\r\n      // Optional: You can re-add the AR button if needed when the session ends\r\n      // document.body.appendChild(arButton);\r\n    });\r\n  \r\n    for (let i = 0; i < models.length; i++) {\r\n      const loader = new GLTFLoader();\r\n      loader.load(models[i], function (glb) {\r\n        let model = glb.scene;\r\n        items[i] = model;\r\n      });\r\n    }\r\n  \r\n    controller = renderer.xr.getController(0);\r\n    controller.addEventListener(\"select\", onSelect);\r\n    scene.add(controller);\r\n  \r\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\r\n    reticle.matrixAutoUpdate = false;\r\n    reticle.visible = false;\r\n    scene.add(reticle);\r\n  }\r\n  \r\n  \r\n\r\n  function onSelect() {\r\n    if (reticle.visible) {\r\n      let newModel = items[itemSelectedIndex].clone();\r\n      newModel.visible = true;\r\n      \r\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\r\n  \r\n      let scaleFactor = modelScaleFactor[itemSelectedIndex];\r\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\r\n  \r\n      scene.add(newModel);\r\n    }\r\n  }\r\n  \r\n  const onClicked = (e, selectItem, index) => {\r\n    itemSelectedIndex = index;\r\n\r\n    for (let i = 0; i < models.length; i++) {\r\n      const el = document.querySelector(`#item${i}`);\r\n      el.classList.remove(\"clicked\");\r\n    }\r\n    e.target.classList.add(\"clicked\");\r\n  };\r\n\r\n  function setupFurnitureSelection() {\r\n    for (let i = 0; i < models.length; i++) {\r\n      const el = document.querySelector(`#item${i}`);\r\n      el.addEventListener(\"beforexrselect\", (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      });\r\n      el.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onClicked(e, items[i], i);\r\n      });\r\n    }\r\n  }\r\n\r\n  function animate() {\r\n    renderer.setAnimationLoop(render);\r\n  }\r\n\r\n  function render(timestamp, frame) {\r\n    if (frame) {\r\n      const referenceSpace = renderer.xr.getReferenceSpace();\r\n      const session = renderer.xr.getSession();\r\n  \r\n      if (hitTestSourceRequested === false) {\r\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\r\n          session.requestHitTestSource({ space: referenceSpace }).then(function (source) {\r\n            hitTestSource = source;\r\n          });\r\n        });\r\n  \r\n        session.addEventListener(\"end\", function () {\r\n          hitTestSourceRequested = false;\r\n          hitTestSource = null;\r\n        });\r\n  \r\n        hitTestSourceRequested = true;\r\n      }\r\n  \r\n      if (hitTestSource) {\r\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\r\n  \r\n        let hitTestResult = null;\r\n  \r\n        for (const hit of hitTestResults) {\r\n          const pose = hit.getPose(referenceSpace);\r\n          const normal = pose.transform.orientation;\r\n  \r\n          if (Math.abs(normal[0]) < 0.1 && Math.abs(normal[1] - 1) < 0.1 && Math.abs(normal[2]) < 0.1) {\r\n            hitTestResult = hit;\r\n            break;\r\n          }\r\n        }\r\n  \r\n        if (hitTestResult) {\r\n          const pose = hitTestResult.getPose(referenceSpace);\r\n          reticle.visible = true;\r\n          reticle.matrix.fromArray(pose.transform.matrix);\r\n  \r\n          setHitTestVisible(false);\r\n        } else {\r\n          reticle.visible = false;\r\n        }\r\n      }\r\n    }\r\n  \r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <canvas id=\"canvas\"></canvas>\r\n      {hitTestVisible && (\r\n        <div className=\"scanning-message\">\r\n          <img src=\"scanwhite.png\" alt=\"Scanning\" className=\"scanning-image\" />\r\n          <div className=\"typing-text\">Our System Scanning your Surface</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,mCAAmC;AAC5D,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,gBAAgB,QAAQ,2CAA2C;AAC5E,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,OAAO;EACX,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIC,sBAAsB,GAAG,KAAK;EAElC,IAAIC,KAAK,EAAEC,MAAM,EAAEC,QAAQ;EAE3B,MAAMC,MAAM,GAAG,CACb,oBAAoB,EACpB,mBAAmB,EACnB,kCAAkC,EAClC,kBAAkB,EAClB,wBAAwB,EACxB,qCAAqC,EACrC,4BAA4B,EAC5B,kBAAkB,EAClB,6BAA6B,EAC7B,wBAAwB,EACxB,uBAAuB,EACvB,uBAAuB,EACvB,yBAAyB,EACzB,8BAA8B,EAC9B,yBAAyB,EACzB,mBAAmB,EACnB,kBAAkB,CACnB;EAED,MAAMC,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzE,MAAMC,KAAK,GAAG,EAAE;EAChB,IAAIC,iBAAiB,GAAG,CAAC;EAEzB,IAAIC,UAAU;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdkB,IAAI,CAAC,CAAC;IACNC,uBAAuB,CAAC,CAAC;IACzBC,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,SAASF,IAAIA,CAAA,EAAG;IACd,IAAIG,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAChDf,KAAK,GAAG,IAAIb,KAAK,CAAC6B,KAAK,CAAC,CAAC;IACzBf,MAAM,GAAG,IAAId,KAAK,CAAC8B,iBAAiB,CAAC,EAAE,EAAEJ,QAAQ,CAACK,UAAU,GAAGL,QAAQ,CAACM,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC;IAE9F,MAAMC,KAAK,GAAG,IAAIjC,KAAK,CAACkC,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC9DD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;IAChCvB,KAAK,CAACwB,GAAG,CAACJ,KAAK,CAAC;IAEhBlB,QAAQ,GAAG,IAAIf,KAAK,CAACsC,aAAa,CAAC;MACjCC,MAAM,EAAEb,QAAQ;MAChBc,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE;IACT,CAAC,CAAC;IACF1B,QAAQ,CAAC2B,aAAa,CAACC,MAAM,CAACC,gBAAgB,CAAC;IAC/C7B,QAAQ,CAAC8B,OAAO,CAACnB,QAAQ,CAACK,UAAU,EAAEL,QAAQ,CAACM,WAAW,CAAC;IAC3DjB,QAAQ,CAAC+B,EAAE,CAACC,OAAO,GAAG,IAAI;IAE1B,MAAMC,OAAO,GAAG,IAAI7C,gBAAgB,CAACY,QAAQ,CAAC;IAC9CiC,OAAO,CAACC,gBAAgB,CAAC,iBAAiB,EAAE,MAAM;MAChDpC,KAAK,CAACwB,GAAG,CAACW,OAAO,CAAC;MAClBnC,KAAK,CAACqC,MAAM,CAACjB,KAAK,CAAC;MACnB,IAAIe,OAAO,CAACG,WAAW,EAAE;QACvBtC,KAAK,CAACsC,WAAW,GAAGH,OAAO,CAACG,WAAW;MACzC;IACF,CAAC,CAAC;IAEFH,OAAO,CAACC,gBAAgB,CAAC,eAAe,EAAE,MAAM;MAC9CpC,KAAK,CAACwB,GAAG,CAACJ,KAAK,CAAC;MAChBpB,KAAK,CAACqC,MAAM,CAACF,OAAO,CAAC;IACvB,CAAC,CAAC;IAEF,IAAII,QAAQ,GAAGnD,QAAQ,CAACoD,YAAY,CAACtC,QAAQ,EAAE;MAC7CuC,gBAAgB,EAAE,CAAC,UAAU,CAAC;MAC9BC,gBAAgB,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC;MACrDC,UAAU,EAAE;QAAEC,IAAI,EAAE9B,QAAQ,CAAC+B;MAAK;IACpC,CAAC,CAAC;IAEFN,QAAQ,CAACO,KAAK,CAACC,MAAM,GAAG,KAAK;IAC7BjC,QAAQ,CAAC+B,IAAI,CAACG,WAAW,CAACT,QAAQ,CAAC;IAEnCrC,QAAQ,CAAC+B,EAAE,CAACG,gBAAgB,CAAC,cAAc,EAAE,MAAM;MACjD;MACA,IAAIG,QAAQ,CAACU,aAAa,EAAE;QAC1BV,QAAQ,CAACU,aAAa,CAACC,WAAW,CAACX,QAAQ,CAAC;MAC9C;IACF,CAAC,CAAC;IAEFrC,QAAQ,CAAC+B,EAAE,CAACG,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAC/C;MACA;IAAA,CACD,CAAC;IAEF,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhD,MAAM,CAACiD,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAME,MAAM,GAAG,IAAIhE,UAAU,CAAC,CAAC;MAC/BgE,MAAM,CAACC,IAAI,CAACnD,MAAM,CAACgD,CAAC,CAAC,EAAE,UAAUI,GAAG,EAAE;QACpC,IAAIC,KAAK,GAAGD,GAAG,CAACvD,KAAK;QACrBK,KAAK,CAAC8C,CAAC,CAAC,GAAGK,KAAK;MAClB,CAAC,CAAC;IACJ;IAEAjD,UAAU,GAAGL,QAAQ,CAAC+B,EAAE,CAACwB,aAAa,CAAC,CAAC,CAAC;IACzClD,UAAU,CAAC6B,gBAAgB,CAAC,QAAQ,EAAEsB,QAAQ,CAAC;IAC/C1D,KAAK,CAACwB,GAAG,CAACjB,UAAU,CAAC;IAErBV,OAAO,GAAG,IAAIV,KAAK,CAACwE,IAAI,CAAC,IAAIxE,KAAK,CAACyE,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI5E,KAAK,CAAC6E,iBAAiB,CAAC,CAAC,CAAC;IACpHnE,OAAO,CAACoE,gBAAgB,GAAG,KAAK;IAChCpE,OAAO,CAACqE,OAAO,GAAG,KAAK;IACvBlE,KAAK,CAACwB,GAAG,CAAC3B,OAAO,CAAC;EACpB;EAIA,SAAS6D,QAAQA,CAAA,EAAG;IAClB,IAAI7D,OAAO,CAACqE,OAAO,EAAE;MACnB,IAAIC,QAAQ,GAAG9D,KAAK,CAACC,iBAAiB,CAAC,CAAC8D,KAAK,CAAC,CAAC;MAC/CD,QAAQ,CAACD,OAAO,GAAG,IAAI;MAEvBrE,OAAO,CAACwE,MAAM,CAACC,SAAS,CAACH,QAAQ,CAAC7C,QAAQ,EAAE6C,QAAQ,CAACI,UAAU,EAAEJ,QAAQ,CAACK,KAAK,CAAC;MAEhF,IAAIC,WAAW,GAAGrE,gBAAgB,CAACE,iBAAiB,CAAC;MACrD6D,QAAQ,CAACK,KAAK,CAACjD,GAAG,CAACkD,WAAW,EAAEA,WAAW,EAAEA,WAAW,CAAC;MAEzDzE,KAAK,CAACwB,GAAG,CAAC2C,QAAQ,CAAC;IACrB;EACF;EAEA,MAAMO,SAAS,GAAGA,CAACC,CAAC,EAAEC,UAAU,EAAEC,KAAK,KAAK;IAC1CvE,iBAAiB,GAAGuE,KAAK;IAEzB,KAAK,IAAI1B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhD,MAAM,CAACiD,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAM2B,EAAE,GAAGhE,QAAQ,CAACiE,aAAa,CAAE,QAAO5B,CAAE,EAAC,CAAC;MAC9C2B,EAAE,CAACE,SAAS,CAAC3C,MAAM,CAAC,SAAS,CAAC;IAChC;IACAsC,CAAC,CAACM,MAAM,CAACD,SAAS,CAACxD,GAAG,CAAC,SAAS,CAAC;EACnC,CAAC;EAED,SAASb,uBAAuBA,CAAA,EAAG;IACjC,KAAK,IAAIwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhD,MAAM,CAACiD,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAM2B,EAAE,GAAGhE,QAAQ,CAACiE,aAAa,CAAE,QAAO5B,CAAE,EAAC,CAAC;MAC9C2B,EAAE,CAAC1C,gBAAgB,CAAC,gBAAgB,EAAGuC,CAAC,IAAK;QAC3CA,CAAC,CAACO,cAAc,CAAC,CAAC;QAClBP,CAAC,CAACQ,eAAe,CAAC,CAAC;MACrB,CAAC,CAAC;MACFL,EAAE,CAAC1C,gBAAgB,CAAC,OAAO,EAAGuC,CAAC,IAAK;QAClCA,CAAC,CAACO,cAAc,CAAC,CAAC;QAClBP,CAAC,CAACQ,eAAe,CAAC,CAAC;QACnBT,SAAS,CAACC,CAAC,EAAEtE,KAAK,CAAC8C,CAAC,CAAC,EAAEA,CAAC,CAAC;MAC3B,CAAC,CAAC;IACJ;EACF;EAEA,SAASvC,OAAOA,CAAA,EAAG;IACjBV,QAAQ,CAACkF,gBAAgB,CAACC,MAAM,CAAC;EACnC;EAEA,SAASA,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IAChC,IAAIA,KAAK,EAAE;MACT,MAAMC,cAAc,GAAGtF,QAAQ,CAAC+B,EAAE,CAACwD,iBAAiB,CAAC,CAAC;MACtD,MAAMC,OAAO,GAAGxF,QAAQ,CAAC+B,EAAE,CAAC0D,UAAU,CAAC,CAAC;MAExC,IAAI5F,sBAAsB,KAAK,KAAK,EAAE;QACpC2F,OAAO,CAACE,qBAAqB,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,UAAUL,cAAc,EAAE;UACrEE,OAAO,CAACI,oBAAoB,CAAC;YAAEC,KAAK,EAAEP;UAAe,CAAC,CAAC,CAACK,IAAI,CAAC,UAAUG,MAAM,EAAE;YAC7ElG,aAAa,GAAGkG,MAAM;UACxB,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFN,OAAO,CAACtD,gBAAgB,CAAC,KAAK,EAAE,YAAY;UAC1CrC,sBAAsB,GAAG,KAAK;UAC9BD,aAAa,GAAG,IAAI;QACtB,CAAC,CAAC;QAEFC,sBAAsB,GAAG,IAAI;MAC/B;MAEA,IAAID,aAAa,EAAE;QACjB,MAAMmG,cAAc,GAAGV,KAAK,CAACW,iBAAiB,CAACpG,aAAa,CAAC;QAE7D,IAAIqG,aAAa,GAAG,IAAI;QAExB,KAAK,MAAMC,GAAG,IAAIH,cAAc,EAAE;UAChC,MAAMI,IAAI,GAAGD,GAAG,CAACE,OAAO,CAACd,cAAc,CAAC;UACxC,MAAMe,MAAM,GAAGF,IAAI,CAACG,SAAS,CAACC,WAAW;UAEzC,IAAI3C,IAAI,CAAC4C,GAAG,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIzC,IAAI,CAAC4C,GAAG,CAACH,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAIzC,IAAI,CAAC4C,GAAG,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;YAC3FJ,aAAa,GAAGC,GAAG;YACnB;UACF;QACF;QAEA,IAAID,aAAa,EAAE;UACjB,MAAME,IAAI,GAAGF,aAAa,CAACG,OAAO,CAACd,cAAc,CAAC;UAClD3F,OAAO,CAACqE,OAAO,GAAG,IAAI;UACtBrE,OAAO,CAACwE,MAAM,CAACsC,SAAS,CAACN,IAAI,CAACG,SAAS,CAACnC,MAAM,CAAC;UAE/C5D,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC,MAAM;UACLZ,OAAO,CAACqE,OAAO,GAAG,KAAK;QACzB;MACF;IACF;IAEAhE,QAAQ,CAACmF,MAAM,CAACrF,KAAK,EAAEC,MAAM,CAAC;EAChC;EAEA,oBACEP,OAAA;IAAKkH,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnH,OAAA;MAAQoH,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC5B1G,cAAc,iBACbd,OAAA;MAAKkH,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BnH,OAAA;QAAKyH,GAAG,EAAC,eAAe;QAACC,GAAG,EAAC,UAAU;QAACR,SAAS,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrExH,OAAA;QAAKkH,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAgC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtH,EAAA,CAzNQD,GAAG;AAAA0H,EAAA,GAAH1H,GAAG;AA2NZ,eAAeA,GAAG;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}